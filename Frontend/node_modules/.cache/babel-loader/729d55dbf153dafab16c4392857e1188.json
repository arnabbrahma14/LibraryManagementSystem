{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tranings\\\\Library Management System\\\\Frontend\\\\src\\\\Pages\\\\Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport NavbarComp from '../Components/NavbarComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport default function Users() {\n  _s();\n\n  var [users, setUsers] = useState([]);\n\n  var displayUsers = () => {\n    axios({\n      method: 'get',\n      url: 'http://localhost:5000/api/users'\n    }).catch(err => console.log(err)).then(response => setUsers(response.data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          md: {\n            span: 4,\n            offset: 4\n          },\n          children: [\"Show ALL users \", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: displayUsers,\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          md: {\n            span: 4,\n            offset: 4\n          },\n          children: users.map(ele => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Name: ${ele.Name}  Email: ${ele.Email}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          md: 6,\n          children: \"Add New books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          md: 6,\n          children: \"Get the Books of the individual users and also remove the book if the time is over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          md: 6,\n          children: \"Add new Dept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Users, \"gAXO2JN5F09+lSQAgkU4yvYNIT8=\");\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/Tranings/Library Management System/Frontend/src/Pages/Admin.jsx"],"names":["React","useState","Button","Col","Container","Row","NavbarComp","axios","require","Users","users","setUsers","displayUsers","method","url","catch","err","console","log","then","response","data","span","offset","map","ele","Name","Email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAhC;;AACA,MAAIW,YAAY,GAAG,MAAM;AACrBL,IAAAA,KAAK,CAAC;AACFM,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAICC,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd,EAKCG,IALD,CAKOC,QAAQ,IAAIT,QAAQ,CAACS,QAAQ,CAACC,IAAV,CAL3B;AAMH,GAPD;;AAQA,sBAAO;AAAA,4BACP,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADO,eAGP,QAAC,SAAD;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAI,CAAX;AAAc,UAAA,EAAE,EAAI;AAACC,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,MAAM,EAAE;AAAlB,WAApB;AAAA,qDACmB,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAIX,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAI,CAAX;AAAc,UAAA,EAAE,EAAI;AAACU,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,MAAM,EAAE;AAAlB,WAApB;AAAA,oBACIb,KAAK,CAACc,GAAN,CAAUC,GAAG,IAAI;AACjB,gCAAO;AAAA,wBAAK,SAAQA,GAAG,CAACC,IAAK,YAAWD,GAAG,CAACE,KAAM;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFG;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAaI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAI,CAAX;AAAc,UAAA,EAAE,EAAI,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ,eAkBI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAI,CAAX;AAAc,UAAA,EAAE,EAAI,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAuBI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAI,CAAX;AAAc,UAAA,EAAE,EAAI,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiCH;;GA3CuBlB,K;;KAAAA,K","sourcesContent":["import React, {useState} from 'react'\r\nimport { Button, Col, Container, Row } from 'react-bootstrap'\r\nimport NavbarComp from '../Components/NavbarComp'\r\nconst axios = require('axios')\r\nexport default function Users() {\r\n    var [users, setUsers] = useState([])\r\n    var displayUsers = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:5000/api/users'\r\n        })\r\n        .catch(err => console.log(err))\r\n        .then( response => setUsers(response.data))\r\n    }\r\n    return <div>\r\n    <NavbarComp />\r\n\r\n    <Container>\r\n        <Row>\r\n            <Col xs = {2} md = {{span: 4, offset: 4}}>\r\n                Show ALL users <Button onClick = {displayUsers}>Show</Button>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col xs = {2} md = {{span: 4, offset: 4}}>{\r\n                users.map(ele => { \r\n                return <p>{`Name: ${ele.Name}  Email: ${ele.Email}`}</p>\r\n            })}\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col xs = {2} md = {6}>\r\n                Add New books\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col xs = {2} md = {6}>\r\n                Get the Books of the individual users and also remove the book if the time is over\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col xs = {2} md = {6}>\r\n                Add new Dept\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}